name: dev

services:
  # 1. MongoDB - Base de datos para Auth 
  mongodb:
    container_name: mongodb
    image: mongo:7.0
    restart: always
    networks:
      - appnet
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: ["CMD-SHELL", "echo 'db.runCommand(\"ping\").ok' | mongosh mongodb:27017/myapp --quiet"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  # 2. Auth - Depende de MongoDB
  auth:
    build:
      context: ./auth
      dockerfile: Dockerfile
    depends_on:
      mongodb:
        condition: service_healthy
    environment:
      NODE_ENV: development
      PORT: "3500"
      DATABASE_URI: mongodb://mongodb:27017/myapp
      ACCESS_TOKEN_SECRET: to97ke21ns21e3214cret
      REFRESH_TOKEN_SECRET: toke6n453secre4122ta14s
    expose:
      - "3500"
    networks:
      - appnet
    restart: unless-stopped

  # 3. PostgreSQL - Base de datos para Soli
  db:
    image: postgres:17.6-trixie
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: tomas
      POSTGRES_DB: postgres
    networks:
      - appnet
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./postgres/db.sql:/docker-entrypoint-initdb.d/db.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres && psql -U postgres -lqt | cut -d \\| -f 1 | grep -qw postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # 4. Soli - Depende de PostgreSQL
  soli:
    build:
      context: ./soli
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_HOST: db
      DB_PORT: "5432"
      DB_NAME: postgres
      DB_USER: postgres
      DB_PASSWORD: tomas
    expose:
      - "8000"
    networks:
      - appnet
    restart: unless-stopped

  # 5. Client - Depende de Auth y Soli
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    depends_on:
      auth:
        condition: service_started
      soli:
        condition: service_started
    environment:
      VITE_API_BASE_URL: /api
      VITE_SQ_API_BASE_URL: /soli
    expose:
      - "3000"
    networks:
      - appnet
    restart: unless-stopped

  # 6. Nginx - Depende de todos los servicios
  nginx:
    container_name: nginx
    image: nginx:alpine
    depends_on:
      auth:
        condition: service_started
      soli:
        condition: service_started
      client:
        condition: service_started
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - appnet
    restart: unless-stopped

networks:
  appnet:
    driver: bridge

volumes:
  mongo_data:
  pg_data:
